{
  "name": "jeremy.codes",
  "version": "2.0.0",
  "description": "My personal website.",
  "main": "./src/index.js",
  "scripts": {
    "clean": "npx rimraf dist",
    "build": "npm run clean && npm run webpack && npm run copy && npm run imageopt && npm run build:xml && npm run compress",
    "build:dev": "npm run clean && npx webpack --progress && npm run copy && npm run imageopt:webp-png && npm run build:xml",
    "webpack": "NODE_ENV=production npx webpack --progress",
    "copy": "echo \"Copying assets...\" && cp -fv ./src/google7b88ad726109dad3.html ./dist/google7b88ad726109dad3.html && cp -fv ./src/.htaccess ./dist/.htaccess && cp -fv ./src/js/lines.js ./dist/js/lines.js && cp -fv ./src/icons/*.* ./dist && cp -fv ./src/*.txt ./dist && cp -Rfv ./src/img ./dist/img",
    "compress": "npm run gzip && npm run brotli",
    "gzip": "echo \"Statically compressing assets (gzip)...\" && find -E ./dist -regex '.*\\.(m?js|css|xml|svg|html)' -exec gzip -9k {} \\;",
    "brotli": "echo \"Statically compressing assets (brotli)...\" && find -E ./dist -regex '.*\\.(m?js|css|xml|svg|html)' -exec brotli -o {}.br -k -q 11 -w 24 {} \\;",
    "imageopt": "npm run imageopt:png && npm run imageopt:png-placeholder && npm run imageopt:webp-png && npm run imageopt:jpg && npm run imageopt:svg",
    "imageopt:webp-png": "echo \"Converting PNGs to WebP...\" && find ./dist/img -type f -name '*.png' | xargs -P 32 -I {} sh -c 'npx cwebp -quiet -q 80 $1 -o \"${1%.png}.webp\"' _ {} \\;",
    "imageopt:png": "echo \"Optimizing PNGs...\" && find ./dist -type f -name '*.png' | xargs -P 32 -I {} sh -c 'npx pngquant --force --skip-if-larger --quality 60-80 --output $1 --speed 1 --strip $1' _ {} \\;",
    "imageopt:png-placeholder": "echo \"Optimizing Placeholder PNGs...\" && find ./dist -type f -name '*-placeholder.png' | xargs -P 32 -I {} sh -c 'npx pngquant --force --skip-if-larger --quality 0-1 --nofs --output $1 --speed 1 --posterize 0 --strip $1' _ {} \\;",
    "imageopt:jpg": "echo \"Optimizing JPEGs...\" && find ./dist -type f -name '*.jpg' | xargs -P 32 -I {} sh -c 'npx jpeg-recompress -a -l 16 -m smallfry -s -n 55 -x 85 -Q $1 $1' _ {} \\;",
    "imageopt:svg": "echo \"Optimizing SVGs...\" && find ./dist -type f -name '*.svg' | xargs -P 32 -I {} sh -c 'npx svgo -q -i $1 -o $1 -p 1 --multipass' _ {} \\;",
    "build:xml": "npm run build:rss && npm run build:sitemap",
    "build:rss": "echo \"Building RSS feed...\" && npx babel-node ./scripts/build-rss.js > ./dist/rss.xml",
    "build:sitemap": "echo \"Building Sitemap...\" && npx babel-node ./scripts/build-sitemap.js > ./dist/sitemap.xml",
    "deploy:checkvars": "if [ -z ${SITE_HOST+x} ]; then echo \"SITE_HOST is unset\" && exit 1; else echo \"SITE_HOST is set!\"; fi && if [ -z ${SITE_USER+x} ]; then echo \"SITE_USER is unset\" && exit 1; else echo \"SITE_USER is set!\"; fi",
    "deploy:pack": "cd ./dist && tar -cvzpf dist.tar.gz . && mv ./dist.tar.gz ../ && cd ..",
    "deploy:push": "sftp \"${SITE_USER}@${SITE_HOST}\" <<< $'put ./dist.tar.gz'",
    "deploy:unpack": "ssh \"${SITE_USER}@${SITE_HOST}\" \"cd ./jeremy.codes && rm -rf * ._*.html* .htaccess && mv ../dist.tar.gz ./ && tar xvf ./dist.tar.gz && rm ./dist.tar.gz\"",
    "deploy:cleanup": "rm ./dist.tar.gz",
    "deploy": "npm run build && npm run deploy:checkvars && npm run deploy:pack && npm run deploy:push && npm run deploy:unpack && npm run deploy:cleanup",
    "lint": "npx eslint ./src/**/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/malchata/jeremy.codes.git"
  },
  "author": "Jeremy L. Wagner <jeremy.l.wagner@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/malchata/jeremy.codes/issues"
  },
  "homepage": "https://github.com/malchata/jeremy.codes#readme",
  "dependencies": {
    "@babel/polyfill": "^7.4.0",
    "@babel/runtime": "^7.4.2",
    "dnstradamus": "^1.0.2",
    "quicklink": "^1.0.0",
    "yall-js": "^2.3.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.4.0",
    "@babel/node": "^7.2.2",
    "@babel/plugin-proposal-object-rest-spread": "^7.4.0",
    "@babel/plugin-syntax-dynamic-import": "^7.2.0",
    "@babel/plugin-transform-runtime": "^7.4.0",
    "@babel/preset-env": "^7.4.2",
    "@babel/preset-react": "^7.0.0",
    "@babel/register": "^7.4.0",
    "autoprefixer": "^9.5.0",
    "babel-eslint": "^10.0.1",
    "babel-loader": "^8.0.5",
    "css-loader": "^2.1.1",
    "cssnano": "^4.1.10",
    "cwebp-bin": "^5.0.0",
    "eslint": "^5.15.3",
    "eslint-plugin-react": "^7.12.4",
    "file-loader": "^3.0.1",
    "html-webpack-plugin": "^3.2.0",
    "mini-css-extract-plugin": "^0.5.0",
    "pngquant-bin": "^5.0.2",
    "postcss-loader": "^3.0.0",
    "preact": "^8.4.2",
    "preact-render-to-string": "^4.1.0",
    "rimraf": "^2.6.3",
    "webpack": "^4.29.6",
    "webpack-cli": "^3.3.0"
  }
}
